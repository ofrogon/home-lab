---

services:
  redis:
    container_name: redis
    image: docker.io/valkey/valkey:8-alpine
    command: valkey-server --save 30 1 --loglevel warning
    restart: unless-stopped
    networks:
      - back-end
    volumes:
      - valkey-data2:/data
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"

  searxng:
    container_name: searxng
    image: docker.io/searxng/searxng:latest
    restart: unless-stopped
    networks:
      - front-end
      - back-end
    #    ports:
    #      - "127.0.0.1:8080:8080"
    volumes:
      - /docker/searxng:/etc/searxng:rw
    environment:
      SEARXNG_BASE_URL: https://${SEARXNG_HOSTNAME:-localhost}/
      UWSGI_WORKERS: ${SEARXNG_UWSGI_WORKERS:-4}
      UWSGI_THREADS: ${SEARXNG_UWSGI_THREADS:-4}
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.search-http.entrypoints=web"
      - "traefik.http.routers.search-http.rule=Host(`${SEARXNG_HOSTNAME}`)"
      - "traefik.http.routers.search-https.entrypoints=websecure"
      - "traefik.http.routers.search-https.rule=Host(`${SEARXNG_HOSTNAME}`)"
      - "traefik.http.routers.search-https.tls=true"
      - "traefik.http.routers.search-https.tls.certresolver=production"
      - "traefik.http.routers.search-https.service=search-svc"
      - "traefik.http.services.search-svc.loadBalancer.server.port=8080"
      - "traefik.docker.network=front-end"

networks:
  front-end:
    external: true
  back-end:
    external: true

volumes:
  valkey-data2: